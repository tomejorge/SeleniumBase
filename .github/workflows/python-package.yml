name: CI build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:

    env:
      PY_COLORS: "1"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Install SeleniumBase
      run: |
        python setup.py install

    - name: Install Chrome and Firefox
      run: |
        sudo apt install google-chrome-stable
        sudo apt-get install firefox
    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase

    - name: Install chromedriver and geckodriver (Firefox Webdriver)
      run: |
        seleniumbase install chromedriver latest
        seleniumbase install geckodriver latest

    - name: Make sure pytest is working
      run: |
        echo "def test_1(): pass" > nothing.py
        pytest nothing.py

    - name: Run tests in latest Chrome stable version
      run: |
        mkdir reports
        pytest youtv/tests/test_user_creation.py -v -s --html=test_report.html

    - name: Upload job artifacts as zip
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
          name: test-run-report
          path: |
            youtv/reports/*.html
            youtv/reports/*.png
            youtv/reports/*.json
            youtv/reports/*

#    - name: Update users csv file
#      # allow updating of the csv file with the users created during the test run
#      uses: test-room-7/action-update-file@v1
#      with:
#        file-path: youtv/users.csv
#        commit-msg: update the file users.csv
#        allow-removing: true # allow the creation of the file if it does not exists
#        github-token: ${{ secrets.MY_GITHUB_TOKEN }} # authenticates with a token

    - name: Add & Commit & Push users.csv
      uses: EndBug/add-and-commit@v7.2.1
      with:
        # The arguments for the `git add` command (see the paragraph below for more info)
        # Default: '.'
        add: '/youtv/users.csv'

        # The name of the user that will be displayed as the author of the commit
        # Default: depends on the default_author input
        author_name: Github actions

        # The email of the user that will be displayed as the author of the commit
        # Default: depends on the default_author input
        author_email: ttjj@nuuday.dk

        # The local path to the directory where your repository is located. You should use actions/checkout first to set it up
        # Default: '.'
        cwd: '.'

        # Determines the way the action fills missing author name and email. Three options are available:
        # - github_actor -> UserName <UserName@users.noreply.github.com>
        # - user_info -> Your Display Name <your-actual@email.com>
        # - github_actions -> github-actions <email associated with the github logo>
        # Default:
        default_author: github_actor

        # The message for the commit
        # Default: 'Commit from GitHub Actions (name of the workflow)'
        message: 'commit users.csv file'

        # The flag used on the pull strategy. Use NO-PULL to avoid the action pulling at all.
        # Default: '--no-rebase'
        pull_strategy: 'NO-PULL or --no-rebase or --no-ff or --rebase'

        # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
        # Default: true
        push: true

        # Whether to use the --signoff option on `git commit` (only `true` and `false` are accepted)
        # Default: false
        signoff: true

        # Arguments for the git tag command (the tag name always needs to be the first word not preceded by an hyphen)
        # Default: ''
        tag: 'v1.0.0 --force'
